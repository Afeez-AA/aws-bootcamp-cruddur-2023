#!/usr/bin/env python3

import boto3
import sys
import json
import os

# get the backend-flask dir.
current_path = os.path.dirname(os.path.abspath(__file__))
parent_path = os.path.abspath(os.path.join(current_path, '..', '..', '..'))
sys.path.append(parent_path)
from lib.db import db

attrs = {
  'endpoint_url': 'http://localhost:8000'
}

if "prod" in sys.argv:
  attrs = {}

ddb = boto3.client('dynamodb',**attrs)
table_name = 'cruddur-messages'

def get_my_user_uuid():
  sql = """
    SELECT 
      users.uuid
    FROM users
    WHERE
      users.handle =%(handle)s
  """
  uuid = db.query_value(sql,{
    'handle':  'andrewbrown'
  })
  return uuid

my_user_uuid = get_my_user_uuid()
print(f"my-uuid: {my_user_uuid}")

year = str(datetime.now().year)
# define the query parameters
query_params = {
  'TableName': table_name,
  'ScanIndexForward': False,
  'KeyConditionExpression': 'pk = :pk AND begins_with(sk,:year)',
  'ExpressionAttributeValues': {
    ':year': {'S': year },
    ':pk': {'S': f"GRP#{my_user_uuid}"}
  },
  'ReturnConsumedCapacity': 'TOTAL'
}

# query the table
response = ddb.query(**query_params)


# print the items returned by the query
print(json.dumps(response, sort_keys=True, indent=2))

# The reason for reversing is to get the messages from oldest to newest.
items = response['Items']
items.reverse()

results = []
for item in items:
  last_sent_at = item['sk']['S']
  results.append({
    'uuid': item['message_group_uuid']['S'],
    'display_name': item['user_display_name']['S'],
    'handle': item['user_handle']['S'],
    'message': item['message']['S'],
    'created_at': last_sent_at
  })
print(results)

# print the consumed capacity
print()
print(json.dumps(response['ConsumedCapacity'], sort_keys=True, indent=2))